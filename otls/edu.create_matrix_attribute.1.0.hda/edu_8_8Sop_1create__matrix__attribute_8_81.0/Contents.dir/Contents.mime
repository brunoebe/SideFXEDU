MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = edu::create_matrix_attribute::1.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment "Education tool"
position 0.335714 2.36429
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author sidefx@asterix.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"___toolcount___":{
		"type":"string",
		"value":"1"
	},
	"___toolid___":{
		"type":"string",
		"value":"createEDUTools"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.inp"
Content-Type: text/plain

1
0 0 6 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.432855 4.71719
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author brunoebe@calvin.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle1.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "attribute"
        label   "Attribute"
        type    string
        default { "" }
    }
    parm {
        name    "type"
        label   "Type"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "mat3"
        label   "Mat3"
        type    float
        size    9
        default { "0" "0" "0" "0" "0" "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "mat4"
        label   "Mat4"
        type    float
        size    16
        default { "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" "0" }
        range   { 0 1 }
    }
    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }
    parm {
        name    "mat3x"
        label   "mat3x"
        type    float
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "mat3y"
        label   "mat3y"
        type    float
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "mat3z"
        label   "mat3z"
        type    float
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "mat4x"
        label   "mat4x"
        type    float
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "mat4y"
        label   "mat4y"
        type    float
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "mat4z"
        label   "mat4z"
        type    float
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "mat3w"
        label   "mat3w"
        type    float
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "mat4w"
        label   "mat4w"
        type    float
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "invert"
        label   "Invert"
        type    integer
        default { "0" }
        range   { 0 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle1.chn"
Content-Type: text/plain

{
    channel attribute {
      lefttype = extend
      righttype = extend
      defaultString = \"xform\"
      flags = 0
      segment { length = 0 expr = chs(\"../name\") }
    }
    channel type {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../type\") }
    }
    channel mat3x {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mat31\") }
    }
    channel mat3y {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat32\") }
    }
    channel mat3z {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat33\") }
    }
    channel mat4x {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mat41\") }
    }
    channel mat4y {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat42\") }
    }
    channel mat4z {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat43\") }
    }
    channel mat3w {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat34\") }
    }
    channel mat35 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mat35\") }
    }
    channel mat36 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat36\") }
    }
    channel mat37 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat37\") }
    }
    channel mat38 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat38\") }
    }
    channel mat39 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mat39\") }
    }
    channel mat4w {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat44\") }
    }
    channel mat45 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat45\") }
    }
    channel mat46 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mat46\") }
    }
    channel mat47 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat47\") }
    }
    channel mat48 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat48\") }
    }
    channel mat49 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat49\") }
    }
    channel mat410 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat410\") }
    }
    channel mat411 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mat411\") }
    }
    channel mat412 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat412\") }
    }
    channel mat413 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat413\") }
    }
    channel mat414 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat414\") }
    }
    channel mat415 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat415\") }
    }
    channel mat416 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mat416\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../class\") }
    }
    channel invert {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../invert\") }
    }
    channel mat31 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mat31\") }
    }
    channel mat32 {
      lefttype = extend
      righttype = extend
      default = -0.3987
      flags = 0
      segment { length = 0 value = -0.3987 -0.3987 expr = ch(\"../mat32\") }
    }
    channel mat33 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat33\") }
    }
    channel mat34 {
      lefttype = extend
      righttype = extend
      default = 0.3987
      flags = 0
      segment { length = 0 value = 0.3987 0.3987 expr = ch(\"../mat34\") }
    }
    channel mat41 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mat41\") }
    }
    channel mat42 {
      lefttype = extend
      righttype = extend
      default = 0.3987
      flags = 0
      segment { length = 0 value = 0.3987 0.3987 expr = ch(\"../mat42\") }
    }
    channel mat43 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat43\") }
    }
    channel mat44 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mat44\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"string attribute = chs(\"attribute\");
int type = chi(\"type\");
matrix3 mat3 = ch3(\"mat3\");
matrix mat4 = ch4(\"mat4\");
int invert = chi(\"invert\");

if(invert){
    mat3 = invert(mat3);
    mat4 = invert(mat4);
}

if(!type){
    setdetailattrib(0, attribute, mat3, \"set\");
}
else{
    setdetailattrib(0, attribute, mat4, \"set\");
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
attribute	[ 0	locks=0 ]	(	[ attribute	"" ] 	)
type	[ 8	locks=0 ]	(	[ type	0 ] 	)
mat3	[ 0	locks=0 ]	(	[ mat31	0 ] 	[ mat32	0 ] 	[ mat33	0 ] 	[ mat34	0 ] 	[ mat35	0 ] 	[ mat36	0 ] 	[ mat37	0 ] 	[ mat38	0 ] 	[ mat39	0 ] 	)
mat4	[ 0	locks=0 ]	(	[ mat41	0 ] 	[ mat42	0 ] 	[ mat43	0 ] 	[ mat44	0 ] 	[ mat45	0 ] 	[ mat46	0 ] 	[ mat47	0 ] 	[ mat48	0 ] 	[ mat49	0 ] 	[ mat410	0 ] 	[ mat411	0 ] 	[ mat412	0 ] 	[ mat413	0 ] 	[ mat414	0 ] 	[ mat415	0 ] 	[ mat416	0 ] 	)
mat3x	[ 0	locks=0 ]	(	[ mat3x	0 ] 	)
mat3y	[ 0	locks=0 ]	(	[ mat3y	0 ] 	)
mat3z	[ 0	locks=0 ]	(	[ mat3z	0 ] 	)
mat4x	[ 0	locks=0 ]	(	[ mat4x	0 ] 	)
mat4y	[ 0	locks=0 ]	(	[ mat4y	0 ] 	)
mat4z	[ 0	locks=0 ]	(	[ mat4z	0 ] 	)
mat3w	[ 0	locks=0 ]	(	[ mat3w	0 ] 	)
mat4w	[ 0	locks=0 ]	(	[ mat4w	0 ] 	)
invert	[ 0	locks=0 ]	(	[ invert	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.init"
Content-Type: text/plain

type = output
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.432855 3.58769
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	attribwrangle1 0 1 "input1"
}
inputs
{
0 	attribwrangle1 0 1
}
stat
{
  create -1
  modify -1
  author sidefx@asterix.local
  access 0777
}
color UT_Color RGB 0.616 0.871 0.769 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

2
attribwrangle1
output0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
